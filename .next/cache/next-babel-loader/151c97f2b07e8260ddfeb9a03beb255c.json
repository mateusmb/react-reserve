{"ast":null,"code":"import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\nimport Cart from '../../models/Cart';\nconnectDb();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n});\n\nasync function handleGetRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n  const product = await Product.findOne({\n    _id\n  });\n  res.status(200).json(product);\n}\n\nasync function handlePostRequest(req, res) {\n  const {\n    name,\n    price,\n    description,\n    mediaUrl\n  } = req.body;\n\n  try {\n    if (!name || !price || !description || !mediaUrl) {\n      return res.status(422).send(\"Product missing one or more fields\");\n    }\n\n    const product = await new Product({\n      name,\n      price,\n      description,\n      mediaUrl\n    }).save();\n    res.status(201).json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server error in creating product\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const {\n    _id\n  } = req.query;\n\n  try {\n    // 1) Delete product by id\n    await Product.findOneAndDelete({\n      _id\n    }); // 2) Remove product from all carts, referend as 'products'\n\n    await Cart.updateMany({\n      \"products.product\": _id\n    }, {\n      $pull: {\n        products: {\n          product: _id\n        }\n      }\n    });\n    res.status(204).json({});\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error deleting product');\n  }\n}","map":{"version":3,"sources":["/home/magikoopa/Dev/react-reserve/pages/api/product.js"],"names":["Product","connectDb","Cart","req","res","method","handleGetRequest","handlePostRequest","handleDeleteRequest","status","send","_id","query","product","findOne","json","name","price","description","mediaUrl","body","save","error","console","findOneAndDelete","updateMany","$pull","products"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE,YAAMC,gBAAgB,CAACH,GAAD,EAAMC,GAAN,CAAtB;AACA;;AACF,SAAK,MAAL;AACE,YAAMG,iBAAiB,CAACJ,GAAD,EAAMC,GAAN,CAAvB;AACA;;AACF,SAAK,QAAL;AACE,YAAMI,mBAAmB,CAACL,GAAD,EAAMC,GAAN,CAAzB;AACA;;AACF;AACEA,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB,UAASP,GAAG,CAACE,MAAO,cAA1C;AACA;AAZJ;AAcD,CAfD;;AAiBA,eAAeC,gBAAf,CAAgCH,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;AACA,QAAMC,OAAO,GAAG,MAAMb,OAAO,CAACc,OAAR,CAAgB;AAAEH,IAAAA;AAAF,GAAhB,CAAtB;AACAP,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACD;;AAED,eAAeN,iBAAf,CAAiCJ,GAAjC,EAAsCC,GAAtC,EAA2C;AACzC,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAyChB,GAAG,CAACiB,IAAnD;;AACA,MAAI;AACF,QAAI,CAACJ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,WAApB,IAAmC,CAACC,QAAxC,EAAkD;AAChD,aAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AACD;;AACD,UAAMG,OAAO,GAAG,MAAM,IAAIb,OAAJ,CAAY;AAChCgB,MAAAA,IADgC;AAEhCC,MAAAA,KAFgC;AAGhCC,MAAAA,WAHgC;AAIhCC,MAAAA;AAJgC,KAAZ,EAKnBE,IALmB,EAAtB;AAMAjB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,OAArB;AACD,GAXD,CAWE,OAAOS,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD;AACF;;AAED,eAAeF,mBAAf,CAAmCL,GAAnC,EAAwCC,GAAxC,EAA6C;AAC3C,QAAM;AAAEO,IAAAA;AAAF,MAAUR,GAAG,CAACS,KAApB;;AACA,MAAI;AACF;AACA,UAAMZ,OAAO,CAACwB,gBAAR,CAAyB;AAAEb,MAAAA;AAAF,KAAzB,CAAN,CAFE,CAGF;;AACA,UAAMT,IAAI,CAACuB,UAAL,CACJ;AAAE,0BAAoBd;AAAtB,KADI,EAEJ;AAAEe,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAEd,UAAAA,OAAO,EAAEF;AAAX;AAAZ;AAAT,KAFI,CAAN;AAIAP,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAArB;AACD,GATD,CASE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB;AACD;AAEF","sourcesContent":["import Product from \"../../models/Product\";\nimport connectDb from \"../../utils/connectDb\";\nimport Cart from '../../models/Cart'\n\nconnectDb();\n\nexport default async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await handleGetRequest(req, res);\n      break;\n    case \"POST\":\n      await handlePostRequest(req, res);\n      break;\n    case \"DELETE\":\n      await handleDeleteRequest(req, res);\n      break;\n    default:\n      res.status(405).send(`Method ${req.method} not allowed`);\n      break;\n  }\n};\n\nasync function handleGetRequest(req, res) {\n  const { _id } = req.query;\n  const product = await Product.findOne({ _id });\n  res.status(200).json(product);\n}\n\nasync function handlePostRequest(req, res) {\n  const { name, price, description, mediaUrl } = req.body;\n  try {\n    if (!name || !price || !description || !mediaUrl) {\n      return res.status(422).send(\"Product missing one or more fields\");\n    }\n    const product = await new Product({\n      name,\n      price,\n      description,\n      mediaUrl\n    }).save();\n    res.status(201).json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Server error in creating product\");\n  }\n}\n\nasync function handleDeleteRequest(req, res) {\n  const { _id } = req.query;\n  try {\n    // 1) Delete product by id\n    await Product.findOneAndDelete({ _id });\n    // 2) Remove product from all carts, referend as 'products'\n    await Cart.updateMany(\n      { \"products.product\": _id },\n      { $pull: { products: { product: _id } } }\n    )\n    res.status(204).json({});  \n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Error deleting product')\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module"}