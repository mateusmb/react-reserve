{"ast":null,"code":"var _jsxFileName = \"/home/magikoopa/Dev/react-reserve/components/Cart/CartItemList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Segment, Button, Icon, Item, Message } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\n\nfunction CartItemList({\n  products,\n  user,\n  handleRemoveFromCart,\n  success\n}) {\n  const router = useRouter();\n\n  function mapCartProductsToItems(products) {\n    return products.map(p => ({\n      childKey: p.product._id,\n      header: __jsx(Item.Header, {\n        as: \"a\",\n        onClick: () => router.push(`/product?_id=${p.product._id}`),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, p.product.name),\n      image: p.product.mediaUrl,\n      meta: `${p.quantity} x $${p.product.price}`,\n      fluid: \"true\",\n      extra: __jsx(Button, {\n        basic: true,\n        icon: \"remove\",\n        floated: \"right\",\n        onClick: () => handleRemoveFromCart(p.product._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })\n    }));\n  }\n\n  if (success) {\n    return __jsx(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your order and payment has been accepted\",\n      icon: \"star outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n  if (products.length === 0) {\n    return __jsx(Segment, {\n      secondary: true,\n      color: \"teal\",\n      inverted: true,\n      textAlign: \"center\",\n      placeholder: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Header, {\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Icon, {\n      name: \"shopping basket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"No products in your cart. Add some!\"), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, user ? __jsx(Button, {\n      color: \"orange\",\n      onClick: () => router.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"View Products\") : __jsx(Button, {\n      color: \"blue\",\n      onClick: () => router.push(\"/login\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login to Add Products\")));\n  }\n\n  return __jsx(Item.Group, {\n    divided: true,\n    items: mapCartProductsToItems(products),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n}\n\nexport default CartItemList;","map":{"version":3,"sources":["/home/magikoopa/Dev/react-reserve/components/Cart/CartItemList.js"],"names":["Header","Segment","Button","Icon","Item","Message","useRouter","CartItemList","products","user","handleRemoveFromCart","success","router","mapCartProductsToItems","map","p","childKey","product","_id","header","push","name","image","mediaUrl","meta","quantity","price","fluid","extra","length"],"mappings":"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","sourcesContent":["import { Header, Segment, Button, Icon, Item, Message } from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\n\nfunction CartItemList({ products, user, handleRemoveFromCart, success }) {\n  const router = useRouter();\n\n  function mapCartProductsToItems(products) {\n    return products.map(p => ({\n      childKey: p.product._id,\n      header: (\n        <Item.Header\n          as=\"a\"\n          onClick={() => router.push(`/product?_id=${p.product._id}`)}\n        >\n          {p.product.name}\n        </Item.Header>\n      ),\n      image: p.product.mediaUrl,\n      meta: `${p.quantity} x $${p.product.price}`,\n      fluid: \"true\",\n      extra: (\n        <Button\n          basic\n          icon=\"remove\"\n          floated=\"right\"\n          onClick={() => handleRemoveFromCart(p.product._id)}\n        />\n      )\n    }));\n  }\n\n  if (success) {\n    return(\n      <Message\n        success\n        header=\"Success!\"\n        content=\"Your order and payment has been accepted\"\n        icon=\"star outline\"\n      />\n    )\n  }\n\n  if (products.length === 0) {\n    return (\n      <Segment secondary color=\"teal\" inverted textAlign=\"center\" placeholder>\n        <Header icon>\n          <Icon name=\"shopping basket\" />\n          No products in your cart. Add some!\n        </Header>\n        <div>\n          {user ? (\n            <Button color=\"orange\" onClick={() => router.push(\"/\")}>\n              View Products\n            </Button>\n          ) : (\n            <Button color=\"blue\" onClick={() => router.push(\"/login\")}>\n              Login to Add Products\n            </Button>\n          )}\n        </div>\n      </Segment>\n    );\n  }\n\n  return <Item.Group divided items={mapCartProductsToItems(products)} />;\n}\n\nexport default CartItemList;\n"]},"metadata":{},"sourceType":"module"}