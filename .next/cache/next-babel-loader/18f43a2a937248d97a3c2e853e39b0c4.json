{"ast":null,"code":"var _jsxFileName = \"/home/magikoopa/Dev/react-reserve/components/Account/AccountOrders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\n\nfunction AccountOrders(_ref) {\n  var orders = _ref.orders;\n  var router = useRouter();\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(function (order) {\n      return {\n        key: order._id,\n        title: {\n          content: __jsx(Label, {\n            color: \"blue\",\n            content: order.createdAt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11\n            },\n            __self: this\n          })\n        },\n        content: {\n          content: __jsx(React.Fragment, null, __jsx(List.Header, {\n            as: \"h3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16\n            },\n            __self: this\n          }, \"Total: $\", order.total, __jsx(Label, {\n            content: order.email,\n            icon: \"mail\",\n            basic: true,\n            horizontal: true,\n            style: {\n              marginLeft: '1em'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          })), __jsx(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, order.products.map(function (p) {\n            return __jsx(List.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, __jsx(Image, {\n              avatar: true,\n              src: p.product.mediaUrl,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }), __jsx(List.Content, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, __jsx(List.Header, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, p.product.name), __jsx(List.Description, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, p.quantity, \" \\xB7 $\", p.product.price)), __jsx(List.Content, {\n              floated: \"right\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, __jsx(Label, {\n              tag: true,\n              color: \"red\",\n              size: \"tiny\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, p.product.sku)));\n          })))\n        }\n      };\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"folder open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"Order History\"), orders.length === 0 ? __jsx(Segment, {\n    inverted: true,\n    tertiary: true,\n    color: \"grey\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Header, {\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Icon, {\n    name: \"copy outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \"No past orders.\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.push('/');\n    },\n    color: \"orange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"View Products\"))) : __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    exclusive: false,\n    panels: mapOrdersToPanels(orders),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}\n\nexport default AccountOrders;","map":{"version":3,"sources":["/home/magikoopa/Dev/react-reserve/components/Account/AccountOrders.js"],"names":["Header","Accordion","Label","Segment","Icon","Button","List","Image","useRouter","AccountOrders","orders","router","mapOrdersToPanels","map","order","key","_id","title","content","createdAt","total","email","marginLeft","products","p","product","mediaUrl","name","quantity","price","sku","length","push"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,IAA5C,EAAkDC,MAAlD,EAA0DC,IAA1D,EAAgEC,KAAhE,QAA6E,mBAA7E;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,aAAT,OAAmC;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACjC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;;AAEA,WAASI,iBAAT,CAA2BF,MAA3B,EAAmC;AACjC,WAAOA,MAAM,CAACG,GAAP,CAAW,UAAAC,KAAK;AAAA,aAAK;AAC1BC,QAAAA,GAAG,EAAED,KAAK,CAACE,GADe;AAE1BC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,MAAC,KAAD;AAAO,YAAA,KAAK,EAAC,MAAb;AAAoB,YAAA,OAAO,EAAEJ,KAAK,CAACK,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAFmB;AAK1BD,QAAAA,OAAO,EAAE;AACPA,UAAAA,OAAO,EACL,4BACE,MAAC,IAAD,CAAM,MAAN;AAAa,YAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACWJ,KAAK,CAACM,KADjB,EAEE,MAAC,KAAD;AACE,YAAA,OAAO,EAAEN,KAAK,CAACO,KADjB;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,MAHP;AAIE,YAAA,UAAU,MAJZ;AAKE,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,EAWE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGR,KAAK,CAACS,QAAN,CAAeV,GAAf,CAAmB,UAAAW,CAAC;AAAA,mBACnB,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,KAAD;AAAO,cAAA,MAAM,MAAb;AAAc,cAAA,GAAG,EAAEA,CAAC,CAACC,OAAF,CAAUC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGF,CAAC,CAACC,OAAF,CAAUE,IADb,CADF,EAIE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGH,CAAC,CAACI,QADL,aACmBJ,CAAC,CAACC,OAAF,CAAUI,KAD7B,CAJF,CAFF,EAUE,MAAC,IAAD,CAAM,OAAN;AAAc,cAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,KAAD;AAAO,cAAA,GAAG,MAAV;AAAW,cAAA,KAAK,EAAC,KAAjB;AAAuB,cAAA,IAAI,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGL,CAAC,CAACC,OAAF,CAAUK,GADb,CADF,CAVF,CADmB;AAAA,WAApB,CADH,CAXF;AAFK;AALiB,OAAL;AAAA,KAAhB,CAAP;AA0CD;;AAED,SAAO,4BACL,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBADK,EAKJpB,MAAM,CAACqB,MAAP,KAAkB,CAAlB,GACC,MAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,QAAQ,MAA1B;AAA2B,IAAA,KAAK,EAAC,MAAjC;AAAwC,IAAA,SAAS,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMpB,MAAM,CAACqB,IAAP,CAAY,GAAZ,CAAN;AAAA,KAAjB;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CALF,CADD,GAaC,MAAC,SAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,SAAS,EAAE,KAHb;AAIE,IAAA,MAAM,EAAEpB,iBAAiB,CAACF,MAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBG,CAAP;AA0BD;;AAED,eAAeD,aAAf","sourcesContent":["import { Header, Accordion, Label, Segment, Icon, Button, List, Image } from 'semantic-ui-react';\nimport { useRouter } from 'next/router'\n\nfunction AccountOrders({ orders }) {\n  const router = useRouter()\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(order => ({\n      key: order._id,\n      title: {\n        content: <Label color=\"blue\" content={order.createdAt}/>\n      },\n      content: {\n        content: (\n          <>\n            <List.Header as=\"h3\">\n              Total: ${order.total}\n              <Label\n                content={order.email}\n                icon=\"mail\"\n                basic\n                horizontal\n                style={{ marginLeft: '1em' }}\n              />\n            </List.Header>\n            <List>\n              {order.products.map(p => (\n                <List.Item>\n                  <Image avatar src={p.product.mediaUrl}/>\n                  <List.Content>\n                    <List.Header>\n                      {p.product.name}\n                    </List.Header>\n                    <List.Description>\n                      {p.quantity} Â· ${p.product.price}\n                    </List.Description>\n                  </List.Content>\n                  <List.Content floated=\"right\">\n                    <Label tag color=\"red\" size=\"tiny\">\n                      {p.product.sku}\n                    </Label>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </>\n        )\n      }\n    }))\n  }\n\n  return <>\n    <Header as=\"h2\">\n      <Icon name=\"folder open\" />\n      Order History\n    </Header>\n    {orders.length === 0 ? (\n      <Segment inverted tertiary color=\"grey\" textAlign=\"center\">\n        <Header icon>\n          <Icon name=\"copy outline\" />\n          No past orders.\n        </Header>\n        <div>\n          <Button onClick={() => router.push('/')} color='orange'>\n            View Products\n          </Button>\n        </div>\n      </Segment>\n    ) : (\n      <Accordion\n        fluid\n        styled\n        exclusive={false}\n        panels={mapOrdersToPanels(orders)}\n      />\n    )}\n  </>;\n}\n\nexport default AccountOrders;\n"]},"metadata":{},"sourceType":"module"}