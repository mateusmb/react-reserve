{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/magikoopa/Dev/react-reserve/pages/account.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AccountHeader from '../components/Account/AccountHeader';\nimport AccountOrders from '../components/Account/AccountOrders';\nimport { parseCookies } from 'nookies';\nimport baseUrl from '../utils/baseUrl';\nimport axios from 'axios';\n\nfunction Account(_ref) {\n  var user = _ref.user,\n      orders = _ref.orders;\n  return __jsx(React.Fragment, null, __jsx(AccountHeader, _extends({}, user, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })), __jsx(AccountOrders, {\n    orders: orders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n}\n\nAccount.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var _parseCookies, token, payload, url, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _parseCookies = parseCookies(ctx), token = _parseCookies.token;\n\n            if (token) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              orders: []\n            });\n\n          case 3:\n            payload = {\n              headers: {\n                Authorization: token\n              }\n            };\n            url = \"\".concat(baseUrl, \"/api/orders\");\n            _context.next = 7;\n            return axios.get(url, payload);\n\n          case 7:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Account;","map":{"version":3,"sources":["/home/magikoopa/Dev/react-reserve/pages/account.js"],"names":["AccountHeader","AccountOrders","parseCookies","baseUrl","axios","Account","user","orders","getInitialProps","ctx","token","payload","headers","Authorization","url","get","response","data"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,OAAmC;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACjC,SAAO,4BACL,MAAC,aAAD,eAAmBD,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,EAGL,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHK,CAAP;AAKD;;AAEDF,OAAO,CAACG,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACNP,YAAY,CAACO,GAAD,CADN,EAChBC,KADgB,iBAChBA,KADgB;;AAAA,gBAEnBA,KAFmB;AAAA;AAAA;AAAA;;AAAA,6CAGf;AAAEH,cAAAA,MAAM,EAAE;AAAV,aAHe;;AAAA;AAKlBI,YAAAA,OALkB,GAKR;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,EAAEH;AAAjB;AAAX,aALQ;AAMlBI,YAAAA,GANkB,aAMTX,OANS;AAAA;AAAA,mBAODC,KAAK,CAACW,GAAN,CAAUD,GAAV,EAAeH,OAAf,CAPC;;AAAA;AAOlBK,YAAAA,QAPkB;AAAA,6CAQjBA,QAAQ,CAACC,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeZ,OAAf","sourcesContent":["import AccountHeader from '../components/Account/AccountHeader'\nimport AccountOrders from '../components/Account/AccountOrders'\nimport { parseCookies } from 'nookies'\nimport baseUrl from '../utils/baseUrl'\nimport axios from 'axios'\n\nfunction Account({ user, orders }) {\n  return <>\n    <AccountHeader {...user} />\n\n    <AccountOrders orders={orders}/>\n  </>;\n}\n\nAccount.getInitialProps = async ctx => {\n  const { token } = parseCookies(ctx)\n  if (!token) {\n    return { orders: [] }\n  }\n  const payload = { headers: { Authorization: token } }\n  const url = `${baseUrl}/api/orders`;\n  const response = await axios.get(url, payload)\n  return response.data;\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}